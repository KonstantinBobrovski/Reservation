@using Reservation.Areas.IdentityAdministrators.Models;
@using Reservation.Views.Helpers;
@model Reservation.Areas.IdentityAdministrators.Models.RestaurantCreateVM
@{
    Layout = "_layoutSystemAdministrator";
    ViewData["Title"] = "Restaurants List";
}
<div>
    @Html.ValidationSummary(false)
</div>

<form enctype="multipart/form-data" method="post">

    @Html.HiddenFor(m=>m.Id)
    @Html.InputWithValidationMessageFor(m=>m.Name)

    <div class="mb-3 form-floating">
        @Html.TextAreaFor(m=>m.Description,20,20, new {@class = "form-control"})
        @Html.LabelFor(m=>m.Description)
    </div>
    <div class="mb-3">
        @Html.EditorFor(model => model.SchemaOfRestaurant, new { htmlAttributes = new { @class = "form-control", @type="file"} })
        @Html.LabelFor(model => model.SchemaOfRestaurant)

    </div>
    <fieldset>
    <legend style="float:none">Administrator</legend>
    @Html.HiddenFor(m=>m.Administrator.Id)
    @Html.InputWithValidationMessageFor(m=>m.Administrator.Email)
    @Html.PasswordWithValidationMessageFor(m=>m.Administrator.Password)

    </fieldset>

    <fieldset>
        <legend style="float:none">Tables</legend>
        <button onclick="NewTable();event.preventDefault();">Add Table</button>
        <div id="Tables">
            @for (int i = 0; i < (Model?.Tables?.Count ?? 0) ; i++)
            {
                    <div class="d-flex">
                    <label>
                        <span>Capacity</span>
                        <input type="number" name="Tables[@i].Capacity" value="@Model.Tables[i].Capacity"/>

                    </label>
                    <button class="btn btn-danger" onclick="event.preventDefault();Delete(@i))">Delete</button>
                </div>
            }
         
        </div>
    </fieldset>
    <button class="btn btn-primary" type="submit">Enter</button>
</form>   

<script>
    let count=@(Model?.Tables?.Count ?? 0);
  function NewTable(){
      const currCount=count;
      const html=`<div class="d-flex">
        <label>
            <span>Capacity</span>
           <input type="number" name="Tables[${currCount}].Capacity"/>
           
        </label>
        <button class="btn btn-danger" onclick="event.preventDefault();Delete(${currCount})">Delete</button>
      </div>`
      document.querySelector("#Tables").innerHTML+=html;
      count++;
  }

  function Delete(ind){
      document.querySelector(`#Tables [name="Tables${ind}.Capacity"]`).parentElement.parentElement.remove();
       document.querySelectorAll(`#Tables input[name]`).forEach((val,ind)=>{
           val.setAttribute("name","Tables["+ind+"].Capacity");
       })
       count--;
  }
</script>